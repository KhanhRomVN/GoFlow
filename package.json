{
  "name": "goflow",
  "displayName": "GoFlow - Visual Go Code Navigator",
  "description": "Visualize Go code structure as interactive canvas with function calls and dependencies",
  "version": "0.1.0",
  "publisher": "khanhromvn",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/khanhromvn/goflow.git"
  },
  "icon": "images/icon.png",
  "engines": {
    "vscode": "^1.75.0"
  },
  "categories": [
    "Visualization",
    "Programming Languages"
  ],
  "keywords": [
    "go",
    "golang",
    "visualization",
    "graph",
    "code map",
    "architecture",
    "canvas",
    "navigator"
  ],
  "activationEvents": [
    "onLanguage:go",
    "onCommand:goflow.showCanvas"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "viewsContainers": {
      "activitybar": [
        {
          "id": "goflow",
          "title": "GoFlow",
          "icon": "$(graph)"
        }
      ]
    },
    "views": {
      "goflow": [
        {
          "id": "goflowExplorer",
          "name": "Flows"
        }
      ]
    },
    "commands": [
      {
        "command": "goflow.showCanvas",
        "title": "Show GoFlow Canvas",
        "category": "GoFlow",
        "icon": "$(graph)"
      },
      {
        "command": "goflow.refreshCanvas",
        "title": "Refresh Canvas",
        "category": "GoFlow",
        "icon": "$(refresh)"
      },
      {
        "command": "goflow.exportDiagram",
        "title": "Export Diagram as PNG",
        "category": "GoFlow",
        "icon": "$(save)"
      },
      {
        "command": "goflow.focusFunction",
        "title": "Focus on Function",
        "category": "GoFlow"
      },
      {
        "command": "goflow.createFlow",
        "title": "Create New Flow",
        "category": "GoFlow",
        "icon": "$(add)"
      },
      {
        "command": "goflow.openFlow",
        "title": "Open Flow",
        "category": "GoFlow",
        "icon": "$(go-to-file)"
      },
      {
        "command": "goflow.deleteFlow",
        "title": "Delete Flow",
        "category": "GoFlow",
        "icon": "$(trash)"
      },
      {
        "command": "goflow.clearAllFlows",
        "title": "Clear All Flows",
        "category": "GoFlow",
        "icon": "$(clear-all)"
      },
      {
        "command": "goflow.toggleFullscreen",
        "title": "Toggle Fullscreen Mode",
        "category": "GoFlow",
        "icon": "$(screen-full)"
      }
    ],
    "menus": {
      "editor/title": [
        {
          "command": "goflow.showCanvas",
          "when": "resourceLangId == go",
          "group": "navigation"
        }
      ],
      "commandPalette": [
        {
          "command": "goflow.showCanvas",
          "when": "resourceLangId == go"
        }
      ],
      "view/title": [
        {
          "command": "goflow.createFlow",
          "when": "view == goflowExplorer",
          "group": "navigation"
        },
        {
          "command": "goflow.clearAllFlows",
          "when": "view == goflowExplorer"
        }
      ],
      "view/item/context": [
        {
          "command": "goflow.openFlow",
          "when": "view == goflowExplorer && viewItem == flowItem",
          "group": "inline"
        },
        {
          "command": "goflow.deleteFlow",
          "when": "view == goflowExplorer && viewItem == flowItem",
          "group": "inline"
        }
      ]
    },
    "keybindings": [
      {
        "command": "goflow.showCanvas",
        "key": "ctrl+shift+g",
        "mac": "cmd+shift+g",
        "when": "resourceLangId == go"
      },
      {
        "command": "goflow.toggleFullscreen",
        "key": "f11",
        "mac": "f11",
        "when": "goflowCanvasVisible"
      }
    ],
    "configuration": {
      "title": "GoFlow",
      "properties": {
        "goflow.layout": {
          "type": "string",
          "enum": [
            "dagre",
            "cose",
            "circle",
            "grid"
          ],
          "default": "dagre",
          "description": "Graph layout algorithm"
        },
        "goflow.showTypes": {
          "type": "boolean",
          "default": true,
          "description": "Show type definitions in canvas"
        },
        "goflow.showInterfaces": {
          "type": "boolean",
          "default": true,
          "description": "Show interface definitions in canvas"
        },
        "goflow.autoRefresh": {
          "type": "boolean",
          "default": true,
          "description": "Auto-refresh canvas on file save"
        },
        "goflow.maxNodes": {
          "type": "number",
          "default": 100,
          "description": "Maximum nodes to display (performance limit)"
        },
        "goflow.enableJumpToFile": {
          "type": "boolean",
          "default": true,
          "description": "Enable jump to file when clicking on node"
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "webpack",
    "watch": "webpack --watch",
    "package": "webpack --mode production --devtool hidden-source-map",
    "lint": "eslint src",
    "test": "node ./out/test/runTest.js"
  },
  "dependencies": {
    "@monaco-editor/react": "^4.7.0",
    "@xyflow/react": "^12.9.2",
    "cytoscape": "^3.26.0",
    "cytoscape-dagre": "^2.5.0",
    "d3-force": "^3.0.0",
    "dagre": "^0.8.5",
    "elkjs": "^0.11.0",
    "monaco-editor": "^0.54.0",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "vscode-languageclient": "^9.0.0"
  },
  "devDependencies": {
    "@types/d3-force": "^3.0.10",
    "@types/dagre": "^0.7.53",
    "@types/node": "20.x",
    "@types/react": "^18.2.0",
    "@types/react-dom": "^18.2.0",
    "@types/vscode": "^1.75.0",
    "@typescript-eslint/eslint-plugin": "^6.0.0",
    "@typescript-eslint/parser": "^6.0.0",
    "css-loader": "^7.1.2",
    "eslint": "^8.40.0",
    "monaco-editor-webpack-plugin": "^7.1.1",
    "style-loader": "^4.0.0",
    "ts-loader": "^9.4.0",
    "typescript": "^5.0.0",
    "webpack": "^5.80.0",
    "webpack-cli": "^5.1.0"
  }
}
